name: Docker build

on:
    push:
        branches:
            - "main"

jobs:
    docker:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - uses: pnpm/action-setup@v2
              name: Install pnpm
              id: pnpm-install
              with:
                  version: 7
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                  path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Setup rust cache
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-

            - name: Setup Rust (amd64)
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly
                  target: x86_64-unknown-linux-gnu
                  override: true

            - name: Setup Rust (arm64)
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly
                  target: aarch64-unknown-linux-gnu
                  override: true

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Install dependencies
              run: pnpm install

            - name: Build frontend
              run: pnpm build

            - name: Build binary (amd64)
              uses: actions-rs/cargo@v1
              with:
                  use-cross: true
                  command: build
                  args: --release --target x86_64-unknown-linux-gnu

            - name: Build binary (arm64)
              uses: actions-rs/cargo@v1
              with:
                  use-cross: true
                  command: build
                  args: --release --target aarch64-unknown-linux-gnu

            - name: Copy binaries
              run: |
                  cp -r target/x86_64-unknown-linux-gnu target/amd64
                  cp -r target/aarch64-unknown-linux-gnu target/arm64

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  push: true
                  tags: ghcr.io/redstonewizard08/mayhem:latest
